.media {
  max-width: 100rem; //need max-width when in large screen so both columns have no extra space and are squeezed in
  margin: auto;
  display: grid;
  border: 1px solid red;
  padding: 1rem;
  grid-template-columns: repeat(auto-fit, minmax(40rem, 1fr));
  //fr will expand on the free space
  //Note to future me:, know difference between auto-fill and auto-fit; auto-fill will keep track of 'empty' grid tracks; while auto fit will collapse the empty grid tracks;
  //it dosen't matter in this case because there is no empty grid tracks
  margin-top: 20rem;

  img {
    width: 100%;
    height: 100%;
  }
}

.column {
  display: flex;
  flex-wrap: wrap;
  justify-content: center; //centers inside column

  h2 {
    width: 100%;
    text-align: center;
    @media screen and (min-width: $lg_breakpoint) {
      text-align: left;
    }
  }
}

.small-pic-wrap {
  display: flex;
  //wrap must be created! removing it will cause the one of the small-pic to be with the big-pic at a certain breakpoint
}

.big-pic {
  max-width: 50rem;
  max-height: 28rem;
}

.small-pic {
  // display: inline-block;
  // margin-right: -.3rem;
  width: 50%; //without this, it will grow until 25 rem in smaller screens; wouldn't fit container
  max-width: 25rem;
  max-height: 14rem;
}

.details {
  display: flex;
  position: relative;
  top: 15rem;
  border: solid 1px red;
  margin-top: auto;
}

.detail-pic {
  width: 6rem;
  height: 8.5rem;
}

.featured-list {
  display: flex;
  flex-wrap: wrap;
  // grid-column: 1 / span 2;
  // @media screen and (min-width: $md_breakpoint) {
  //   width: $media-container-max;
  // }
  justify-content: space-between;
}
